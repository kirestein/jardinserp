console.log('üß™ TESTE SIMPLES DE CONFIGURA√á√ÉO');
console.log('=================================\n');

try {
  // 1. Testar prote√ß√£o de localhost
  console.log('1. üõ°Ô∏è  Testando prote√ß√£o de localhost...');
  const protection = require('./localhost-protection');
  const isLocal = protection.isLocalhost();
  const recommended = protection.getRecommendedEnvironment();
  
  console.log(`   Localhost: ${isLocal ? '‚úÖ Sim' : '‚ùå N√£o'}`);
  console.log(`   Recomendado: ${recommended}`);
  
  // 2. Testar configura√ß√£o de ambientes
  console.log('\n2. ‚öôÔ∏è  Testando configura√ß√£o de ambientes...');
  
  // For√ßar ambiente development para teste
  process.env.NODE_ENV = 'development';
  delete process.env.DATABASE_URL;
  delete process.env.DATABASE_PUBLIC_URL;
  
  const config = require('./config-environments');
  console.log(`   Ambiente: ${config.environment}`);
  console.log(`   Nome: ${config.name}`);
  console.log(`   Banco: ${config.database.type}`);
  console.log(`   Porta: ${config.server.port}`);
  
  // 3. Testar configura√ß√£o do banco
  console.log('\n3. üóÑÔ∏è  Testando configura√ß√£o do banco...');
  const database = require('./database-config-multi');
  console.log(`   Tipo: ${database.type}`);
  console.log(`   Ambiente: ${database.environment}`);
  
  console.log('\n‚úÖ TESTE B√ÅSICO CONCLU√çDO COM SUCESSO!');
  console.log('=====================================');
  console.log('üü¢ Configura√ß√£o est√° funcionando');
  console.log('üõ°Ô∏è  Prote√ß√£o de localhost ativa');
  console.log('üóÑÔ∏è  Banco configurado corretamente');
  
  console.log('\nüìã Pr√≥ximos passos:');
  console.log('   npm run start:dev  # Iniciar em modo desenvolvimento');
  console.log('   npm start          # Iniciar com detec√ß√£o autom√°tica');
  
} catch (error) {
  console.error('\n‚ùå ERRO NO TESTE:');
  console.error('==================');
  console.error(error.message);
  console.error('\nüîß Stack trace:');
  console.error(error.stack);
}