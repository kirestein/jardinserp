#!/usr/bin/env node

const { execSync } = require('child_process');
const { isLocalhost, getRecommendedEnvironment } = require('./localhost-protection');

console.log('üöÄ SMART START - Detec√ß√£o Autom√°tica de Ambiente');
console.log('================================================\n');

const isLocal = isLocalhost();
const recommended = getRecommendedEnvironment();

console.log(`üñ•Ô∏è  Localhost detectado: ${isLocal ? '‚úÖ Sim' : '‚ùå N√£o'}`);
console.log(`üéØ Ambiente recomendado: ${recommended}`);

if (isLocal) {
  console.log('\nüõ°Ô∏è  PROTE√á√ÉO LOCALHOST ATIVA');
  console.log('============================');
  
  if (recommended === 'development') {
    console.log('üü¢ Usando ambiente DEVELOPMENT (SQLite)');
    console.log('   ‚Ä¢ Banco SQLite local');
    console.log('   ‚Ä¢ Dados de teste inclusos');
    console.log('   ‚Ä¢ 100% seguro para desenvolvimento');
    console.log('   ‚Ä¢ N√£o afeta produ√ß√£o');
  } else if (recommended === 'staging') {
    console.log('üü° Usando ambiente STAGING (PostgreSQL)');
    console.log('   ‚Ä¢ PostgreSQL Railway staging');
    console.log('   ‚Ä¢ Dados de teste');
    console.log('   ‚Ä¢ Seguro para testes');
    console.log('   ‚Ä¢ N√£o afeta produ√ß√£o');
  }
  
  console.log('\nüîÑ Configurando ambiente...');
  
  try {
    // Configurar ambiente recomendado
    execSync(`node switch-environment.js ${recommended}`, { 
      stdio: 'inherit',
      cwd: __dirname
    });
    
    console.log('\nüöÄ Iniciando servidor...');
    console.log('========================');
    
    // Iniciar servidor
    execSync('node server.js', { 
      stdio: 'inherit',
      cwd: __dirname
    });
    
  } catch (error) {
    console.error('\n‚ùå Erro ao iniciar:', error.message);
    process.exit(1);
  }
  
} else {
  console.log('\nüåê AMBIENTE DE PRODU√á√ÉO DETECTADO');
  console.log('=================================');
  console.log('üî¥ Usando configura√ß√£o de produ√ß√£o');
  console.log('‚ö†Ô∏è  Certifique-se de que as vari√°veis est√£o corretas');
  
  try {
    // Em produ√ß√£o, usar o ambiente configurado
    execSync('node server.js', { 
      stdio: 'inherit',
      cwd: __dirname
    });
  } catch (error) {
    console.error('\n‚ùå Erro ao iniciar:', error.message);
    process.exit(1);
  }
}