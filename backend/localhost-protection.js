// Prote√ß√£o para localhost - nunca usar produ√ß√£o em desenvolvimento local
const os = require('os');

function isLocalhost() {
  // Verificar se est√° rodando em localhost/desenvolvimento
  const hostname = os.hostname();
  const isLocal = 
    hostname.includes('localhost') ||
    hostname.includes('127.0.0.1') ||
    hostname.includes('dev') ||
    hostname.includes('local') ||
    process.env.NODE_ENV === 'development' ||
    !process.env.RAILWAY_ENVIRONMENT; // Se n√£o est√° no Railway
  
  return isLocal;
}

function getRecommendedEnvironment() {
  if (isLocalhost()) {
    // Em localhost, sempre usar development ou staging
    const hasPostgresUrl = process.env.DATABASE_URL || process.env.DATABASE_PUBLIC_URL;
    
    if (hasPostgresUrl && process.env.NODE_ENV === 'staging') {
      return 'staging';
    } else {
      return 'development'; // Padr√£o para localhost
    }
  } else {
    // Em produ√ß√£o (Railway), usar o ambiente configurado
    return process.env.NODE_ENV || 'production';
  }
}

function enforceLocalhostSafety() {
  const isLocal = isLocalhost();
  const currentEnv = process.env.NODE_ENV;
  const recommended = getRecommendedEnvironment();
  
  console.log('üõ°Ô∏è  Verifica√ß√£o de Seguran√ßa Localhost');
  console.log('=====================================');
  console.log(`üñ•Ô∏è  Hostname: ${os.hostname()}`);
  console.log(`üåç NODE_ENV: ${currentEnv || 'n√£o definido'}`);
  console.log(`üè† √â localhost: ${isLocal ? '‚úÖ Sim' : '‚ùå N√£o'}`);
  console.log(`üéØ Ambiente recomendado: ${recommended}`);
  
  if (isLocal && currentEnv === 'production') {
    console.log('\nüö® AVISO DE SEGURAN√áA!');
    console.log('=====================================');
    console.log('‚ùå Voc√™ est√° tentando usar PRODU√á√ÉO em localhost!');
    console.log('üõ°Ô∏è  Por seguran√ßa, for√ßando ambiente de desenvolvimento');
    console.log('');
    
    // For√ßar ambiente de desenvolvimento
    process.env.NODE_ENV = 'development';
    
    // Remover URLs de produ√ß√£o para for√ßar SQLite
    delete process.env.DATABASE_URL;
    delete process.env.DATABASE_PUBLIC_URL;
    
    console.log('‚úÖ Ambiente alterado para: development');
    console.log('üóÑÔ∏è  Banco: SQLite local (seguro)');
    console.log('');
  }
  
  if (isLocal && recommended !== currentEnv) {
    console.log(`üí° Recomenda√ß√£o: Use 'npm run start:${recommended}' para localhost`);
  }
  
  return {
    isLocalhost: isLocal,
    currentEnvironment: process.env.NODE_ENV,
    recommendedEnvironment: recommended,
    isSafe: !(isLocal && currentEnv === 'production')
  };
}

module.exports = {
  isLocalhost,
  getRecommendedEnvironment,
  enforceLocalhostSafety
};